version: "3.2"
services:
    db:
        image: postgres:12-alpine
        container_name: db
        ports:
          - "5432:5432"
        environment:
            - POSTGRES_DB=my_database
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=docker
        volumes:
            - pgdata:/var/lib/postgresql/data
            - ./config/createdb.sql:/docker-entrypoint-initdb.d/createdb.sql
        networks:
            - default-nw

    minio1:
        image: minio/minio
        container_name: minio1
        volumes:
          - data1-1:/data1
          - data1-2:/data2
        ports:
          - "9001:9000"
        environment:
          MINIO_ROOT_USER: admin
          MINIO_ROOT_PASSWORD: password
        command: server http://minio{1...2}/data{1...2}
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3

    minio2:
        image: minio/minio
        container_name: minio2
        volumes:
          - data2-1:/data1
          - data2-2:/data2
        ports:
          - "9002:9000"
        environment:
          MINIO_ROOT_USER: admin
          MINIO_ROOT_PASSWORD: password
        command: server http://minio{1...2}/data{1...2}
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        environment:
          - PGADMIN_DEFAULT_EMAIL=raymond@gillett.com
          - PGADMIN_DEFAULT_PASSWORD=test
          - SCRIPT_NAME=/pgadmin
        volumes:
          - ./config/pgadmin/servers.json:/pgadmin4/servers.json
        networks:
          - default-nw


    sqs-mock:
        image: roribio16/alpine-sqs:latest
        container_name: sqs-mock
        ports:
          - "9324:9324"
          - "9325:9325"
        networks:
          - default-nw
  
    sns-mock:
        image: s12v/sns
        container_name: sns-mock
        ports:
          - "9911:9911"
        networks:
          - default-nw
        volumes:
          - ./config/db.json:/etc/sns/db.json
        depends_on:
          - sqs-mock
      
    lambda-docker-etl:
        image: necrobraska/python-lambda
        container_name: python-lambda
        ports:
            - "9000:8080"
        networks:
          - default-nw
networks:
    default-nw:
    
volumes:
    pgdata:
    data1-1:
    data1-2:
    data2-1:
    data2-2: